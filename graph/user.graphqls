# GraphQL schema example
#
# https://gqlgen.com/getting-started/


directive @goField(
  forceResolver: Boolean
  name: String
) on FIELD_DEFINITION | INPUT_FIELD_DEFINITION

directive @auth on FIELD_DEFINITION

scalar Any


type User {
  id: ID!
  email: String!
  firstName: String!
  lastName: String!
  additionalName: String!
  is_active: Boolean!
  profile_picture: String!
  background_picture: String!
  headline: String!
  about: String!
  location: String!
  profileLink: String!
  visits: [Visit!]! @goField(forceResolver: true)
  follows: [Follow!]! @goField(forceResolver: true)
  blocks: [Block!] @goField(forceResolver: true)
  connections: [Connection!]! @goField(forceResolver: true)
  connectRequests: [ConnectRequest!]! @goField(forceResolver: true)
  experiences: [Experience!]! @goField(forceResolver: true)
  educations: [Education!]! @goField(forceResolver: true)
}

type Visit {
  userId: ID!
  visitId: ID!
}

type Follow{
  userId: ID!
  followId: ID!
}

type Query {
  getUserById(id: ID!): User!
  getAllUsers: [User!]!

}

input NewUser {
  email: String!
  firstName: String!
  lastName: String!
  password: String!
}

input UserCredentials {
  email: String!
  password: String!
}

type Mutation {
  login(input: UserCredentials!): Any!
  register(input: NewUser!): Any!

  updateUser(id: ID!, input: NewUser!): User!
  updateProfilePicture(id: ID!, imageUrl: String!): Any!
  updateBackgroundPicture(id: ID!, imageUrl: String!): Any!
  deleteUser(id: ID!): User!
  activateUser(id: ID!): Any!
  resetPassword(email: String!, newPassword: String!): Any!

  followUser(id1: ID!, id2: ID!): Any!  @auth
  unFollowUser(id1: ID!, id2: ID!): Any!  @auth
  visitUser(id1: ID!, id2: ID!): Any!  @auth
}