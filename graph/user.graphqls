# GraphQL schema example
#
# https://gqlgen.com/getting-started/

directive @goField(
  forceResolver: Boolean
  name: String
) on FIELD_DEFINITION | INPUT_FIELD_DEFINITION

directive @auth on FIELD_DEFINITION

scalar Any

type User {
  id: ID!
  email: String!
  firstName: String!
  lastName: String!
  additionalName: String!
  is_active: Boolean!
  profile_picture: String!
  background_picture: String!
  about: String!
  location: String!
  Visits: [Visit!]! @goField(forceResolver: true)
  Follows: [Follow!]! @goField(forceResolver: true)
  Block: [Block!] @goField(forceResolver: true)
  Connection: [Connection!]! @goField(forceResolver: true)
  ConnectRequest: [ConnectRequest!]! @goField(forceResolver: true)
  Experiences: [Experience!]! @goField(forceResolver: true)
  Educations: [Education!]! @goField(forceResolver: true)
}

type Visit {
  userId: ID!
  visitId: ID!
}

type Follow {
  userId: ID!
  followId: ID!
}

type Query {
  getUserById(id: ID!): User!
  getAllUsers: [User!]!
  UserSuggestion(userId: ID!): [User!]!
   UserConnected(userId: ID!) : [User!]!
}

input NewUser {
  email: String!
  firstName: String!
  lastName: String!
  password: String!
}

input UpdateUser {
  firstName: String!
  lastName: String!
  additionalName: String!
  about: String!
  location: String!
}

input UserCredentials {
  email: String!
  password: String!
}

type Mutation {
  login(input: UserCredentials!): Any!
  register(input: NewUser!): Any!

  updateUser(id: ID!, input: UpdateUser!): User!
  updateProfilePicture(id: ID!, imageUrl: String!): Any!
  updateBackgroundPicture(id: ID!, imageUrl: String!): Any!
  deleteUser(id: ID!): User!
  activateUser(id: ID!): Any!
  resetPassword(email: String!, newPassword: String!): Any!

  followUser(id1: ID!, id2: ID!): Any! @auth
  unFollowUser(id1: ID!, id2: ID!): Any! @auth
  visitUser(id1: ID!, id2: ID!): Any! @auth
}
